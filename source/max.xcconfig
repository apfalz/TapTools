// Xcode target configuration settings for the Max 6 SDK
// Used as the basis for Xcode projects to build Max externals.
//
// Changes to the settings in this file will be applied to all SDK examples
// To change settings for only one of the examples, override the settings using
// Xcode's target inspector.
//
// by Timothy Place
// Copyright Â© 2012, Cycling '74


// Name & Version
PRODUCT_NAME = $(PROJECT_NAME)
PRODUCT_VERSION = 6.1.4
ARCHS = i386 x86_64


// Paths
C74SUPPORT = $(SRCROOT)/../../MaxSDK/c74support
HEADER_SEARCH_PATHS = "$(C74SUPPORT)/max-includes" "$(C74SUPPORT)/msp-includes" "$(C74SUPPORT)/jit-includes" "$(SRCROOT)"/.. "$(SRCROOT)"/../../Core/Foundation/library/includes "$(SRCROOT)"/../../Core/DSP/library/includes
FRAMEWORK_SEARCH_PATHS = "$(C74SUPPORT)/max-includes" "$(C74SUPPORT)/msp-includes" "$(C74SUPPORT)/jit-includes"
DSTROOT = $(SRCROOT)/../../TapTools/externals
// (This next path is relative to DSTROOT)
INSTALL_PATH = /


// Special Files
GCC_PREFIX_HEADER = $(C74SUPPORT)/max-includes/macho-prefix.pch
INFOPLIST_FILE = $(SRCROOT)/../Info.plist


// Architecture and Deployment
ARCHS = i386 x86_64

// The following section sets the Mac SDK version to be used.
// For most projects this has little to no impact because there are no direct dependencies on OS function calls.
// In those projects with OS function calls, it should be okay to use the most recent SDK version because the 
// MACOSX_DEPLOYMENT_TARGET will disable functionality that is unavailable in the older target OS.
// For this reason, the SDKROOT variable is commented out, telling Xcode to use the default (which is the most recent SDK).
//
// If you do need to define the SDKROOT, different versions of Xcode have varying syntax and varying versions of the SDK present.

// Xcode 3.x
// SDKROOT = $(DEVELOPER_DIR)/SDKs/MacOSX10.5.sdk

// Xcode 4.0 - Xcode 4.2
// SDKROOT = $(DEVELOPER_DIR)/SDKs/MacOSX10.6.sdk

// Xcode 4.3+
// SDKROOT = macosx10.6

MACOSX_DEPLOYMENT_TARGET = 10.7


// Compiler Version -- leave them all commented out to get the default version provided by Xcode
// GCC_VERSION = 4.2
// GCC_VERSION = com.apple.compilers.llvmgcc42
// GCC_VERSION = com.apple.compilers.llvm.clang.1_0


// Preprocessor Defines
GCC_PREPROCESSOR_DEFINITIONS = "DENORM_WANT_FIX = 1" "NO_TRANSLATION_SUPPORT = 1"


// Static Configuration (don't change these)
WRAPPER_EXTENSION = mxo;
WARNING_CFLAGS = -Wmost -Wno-four-char-constants -Wno-unknown-pragmas
DEPLOYMENT_LOCATION = YES
GENERATE_PKGINFO_FILE = YES


// Flags to enforce some build-time checks for the symbols used while not actually performing a hard link
C74_SYM_LINKER_FLAGS = @$(C74SUPPORT)/max-includes/c74_linker_flags.txt
C74_SYM_LINKER_FLAGS_MSP = -Wl,-U,_dsp_add,-U,_dsp_add64,-U,_z_add_signalmethod,-U,_z_dsp_free,-U,_z_dsp_setup,-U,_class_dspinit,-U,_buffer_getchannelcount,-U,_buffer_getframecount,-U,_buffer_getsamplerate,-U,_buffer_getmillisamplerate,-U,_buffer_locksamples,-U,_buffer_unlocksamples,-U,_buffer_ref_exists,-U,_buffer_ref_getobject,-U,_buffer_ref_new,-U,_buffer_ref_notify,-U,_buffer_setdirty,-U,_class_dspinitjbox,-U,_sys_getdspobjdspstate,-U,_sys_getdspstate,-U,_z_jbox_dsp_free,-U,_z_jbox_dsp_setup,-U,_dsp_resize,-U,_dspchain_start,-U,_dspchain_compile2,-U,_dspchain_tick,-U,_buffer_getinfo,-U,_sys_getsr


// hide all symbols by default
// mark a function to be exported with the C74_EXPORT macro -- most likely this will only apply to the main() function
OTHER_CFLAGS = -fvisibility=hidden
